<% const categories = [
  {
    key: "solo-optimisable",
    label: "üéØ Jeux solo optimisables par IA",
    color: "bg-gradient-to-r from-cyan-400 to-blue-500",
    desc: "Des jeux o√π l‚ÄôIA peut optimiser vos performances ou r√©soudre le jeu √† votre place. Id√©al pour d√©couvrir l‚Äôoptimisation algorithmique et l‚Äôautomatisation.",
  },
  {
    key: "contre-ia",
    label: "ü§ñ Jeux contre une IA",
    color: "bg-gradient-to-r from-pink-400 to-fuchsia-500",
    desc: "Affrontez une intelligence artificielle‚ÄØ! Ici, l‚ÄôIA est votre adversaire direct et propose des d√©fis strat√©giques.",
  },
  {
    key: "ia-apprend",
    label: "üß¨ Jeux o√π l‚ÄôIA apprend √† jouer",
    color: "bg-gradient-to-r from-green-400 to-teal-500",
    desc: "Observez des intelligences artificielles qui apprennent et s‚Äôam√©liorent par elles-m√™mes gr√¢ce √† l‚Äôapprentissage automatique ou aux algorithmes g√©n√©tiques.",
  },
  {
    key: "algo",
    label: "üíª Algorithmes de g√©n√©ration",
    color: "bg-gradient-to-r from-yellow-400 to-orange-500",
    desc: "D√©couvrez des algorithmes qui cr√©ent ou r√©solvent des structures complexes, comme la g√©n√©ration et la r√©solution de labyrinthes.",
  }
]; %>

<div class="mb-8 flex flex-col items-center gap-4">
  <h1 class="text-4xl font-extrabold text-blue-700 mb-3 drop-shadow text-center">üéÆ Jeux IA & G√©n√©tique</h1>
  <div class="w-full max-w-xl flex gap-2">
    <input id="searchInput" class="flex-1 px-4 py-2 border rounded shadow" placeholder="Rechercher un jeu, une techno, une cat√©gorie..." />
    <select id="sortSelect" class="px-3 py-2 border rounded shadow">
      <option value="name">Nom (A-Z)</option>
      <option value="difficulty">Difficult√©</option>
      <option value="category">Cat√©gorie</option>
    </select>
  </div>
  <div class="flex flex-wrap gap-2 mt-2">
    <button class="filter-btn px-3 py-1 rounded bg-blue-100 text-blue-700" data-category="">Tous</button>
    <% categories.forEach(cat => { %>
      <button class="filter-btn px-3 py-1 rounded bg-gray-100 text-gray-700" data-category="<%= cat.key %>"><%= cat.label %></button>
    <% }); %>
  </div>
</div>

<!-- Vue par cat√©gories (par d√©faut) -->
<div id="categoriesView" class="max-w-6xl mx-auto">
  <% categories.forEach(cat => { %>
    <% const categoryGames = games.filter(g => g.categorie === cat.key); %>
    <% if (categoryGames.length > 0) { %>
      <section class="mb-12 category-section" data-category="<%= cat.key %>">
        <div class="<%= cat.color %> p-4 rounded-t-2xl">
          <h2 class="text-2xl font-bold text-white flex items-center gap-3"><%= cat.label %></h2>
          <p class="text-white/90 text-sm mt-1"><%= cat.desc %></p>
        </div>
        <div class="bg-white rounded-b-2xl shadow-lg p-6">
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <% categoryGames.forEach(game => { %>
              <div class="game-card bg-gray-50 rounded-lg shadow hover:shadow-md transition p-4 border-l-4 border-blue-200"
                   data-name="<%= game.name.toLowerCase() %>"
                   data-category="<%= game.categorie %>"
                   data-difficulty="<%= game.difficulty %>"
                   data-technology="<%= game.technology.toLowerCase() %>"
                   data-features="<%= (game.features || []).join(' ').toLowerCase() %>">
                <div class="flex items-center gap-2 mb-2">
                  <span class="font-semibold text-blue-700"><%= game.name %></span>
                  <span class="px-2 py-0.5 rounded text-xs font-bold
                    <% if (game.difficulty === 'Avanc√©') { %> bg-red-100 text-red-600 <% }
                       else if (game.difficulty === 'Interm√©diaire') { %> bg-yellow-100 text-yellow-700 <% }
                       else { %> bg-green-100 text-green-700 <% } %>">
                    <%= game.difficulty %>
                  </span>
                </div>
                <div class="text-gray-600 text-sm mb-3"><%= game.description.substring(0, 80) %>...</div>
                <div class="flex flex-wrap gap-1 mb-3">
                  <span class="px-2 py-0.5 rounded bg-blue-100 text-blue-700 text-xs"><%= game.technology %></span>
                  <% (game.features || []).slice(0,1).forEach(f => { %>
                    <span class="px-2 py-0.5 rounded bg-gray-100 text-gray-700 text-xs"><%= f %></span>
                  <% }); %>
                </div>
                <div class="flex gap-2">
                  <a href="/game/<%= game.key %>" class="flex-1 text-center px-3 py-2 bg-gradient-to-r from-blue-500 to-cyan-400 text-white rounded-lg font-semibold shadow hover:from-blue-600 hover:to-cyan-500 transition text-sm">D√©tails</a>
                  <a href="/play/<%= game.key %>" class="flex-1 text-center px-3 py-2 bg-gray-200 text-blue-700 rounded-lg font-semibold hover:bg-blue-100 transition text-sm">Jouer</a>
                </div>
                <% if (game.youtubeUrl) { %>
                  <a href="<%= game.youtubeUrl %>" target="_blank" class="mt-2 text-red-500 hover:underline flex items-center gap-1 text-sm">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24"><path d="M10 15l5.19-3L10 9v6z"/><path d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14z"/></svg>
                    Vid√©o
                  </a>
                <% } %>
              </div>
            <% }); %>
          </div>
        </div>
      </section>
    <% } %>
  <% }); %>
</div>

<!-- Vue de recherche (cach√©e par d√©faut) -->
<ul id="searchView" class="max-w-3xl mx-auto space-y-4 mt-6" style="display: none;">
  <% games.forEach(game => { %>
    <li class="game-item bg-white rounded-xl shadow p-4 flex flex-col gap-1 border-l-4 border-blue-200"
        data-name="<%= game.name.toLowerCase() %>"
        data-category="<%= game.categorie %>"
        data-difficulty="<%= game.difficulty %>"
        data-technology="<%= game.technology.toLowerCase() %>"
        data-features="<%= (game.features || []).join(' ').toLowerCase() %>">
      <!-- Contenu identique √† ton code actuel -->
      <div class="flex items-center gap-2">
        <span class="font-semibold text-lg text-blue-700"><%= game.name %></span>
        <span class="ml-2 px-2 py-0.5 rounded text-xs font-bold
          <% if (game.difficulty === 'Avanc√©') { %> bg-red-100 text-red-600 <% }
             else if (game.difficulty === 'Interm√©diaire') { %> bg-yellow-100 text-yellow-700 <% }
             else { %> bg-green-100 text-green-700 <% } %>">
          <%= game.difficulty %>
        </span>
      </div>
      <div class="text-gray-600 text-sm"><%= game.description.substring(0, 100) %>...</div>
      <div class="flex flex-wrap gap-2">
        <span class="px-2 py-0.5 rounded bg-blue-100 text-blue-700 text-xs"><%= game.technology %></span>
        <% (game.features || []).slice(0,2).forEach(f => { %>
          <span class="px-2 py-0.5 rounded bg-gray-100 text-gray-700 text-xs"><%= f %></span>
        <% }); %>
      </div>
      <div class="flex gap-2">
        <a href="/game/<%= game.key %>" class="inline-block px-4 py-2 bg-gradient-to-r from-blue-500 to-cyan-400 text-white rounded-lg font-semibold shadow hover:from-blue-600 hover:to-cyan-500 transition">D√©tails</a>
        <a href="/play/<%= game.key %>" class="inline-block px-4 py-2 bg-gray-200 text-blue-700 rounded-lg font-semibold hover:bg-blue-100 transition">Jouer</a>
        <% if (game.youtubeUrl) { %>
          <a href="<%= game.youtubeUrl %>" target="_blank" class="ml-auto text-red-500 hover:underline flex items-center gap-1">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24"><path d="M10 15l5.19-3L10 9v6z"/><path d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14z"/></svg>
            Vid√©o
          </a>
        <% } %>
      </div>
    </li>
  <% }); %>
</ul>
<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('searchInput');
  const sortSelect = document.getElementById('sortSelect');
  const categoriesView = document.getElementById('categoriesView');
  const searchView = document.getElementById('searchView');
  const filterBtns = document.querySelectorAll('.filter-btn');
  let currentCategory = '';
  let currentSort = 'name';

  function switchToSearchMode() {
    categoriesView.style.display = 'none';
    searchView.style.display = 'block';
  }

  function switchToCategoryMode() {
    categoriesView.style.display = 'block';
    searchView.style.display = 'none';
  }

  function filterAndSortGames() {
    const query = searchInput.value.toLowerCase().trim();
    
    if (query === '' && currentCategory === '') {
      // Mode par d√©faut : affichage par cat√©gories
      switchToCategoryMode();
      return;
    }

    // Mode recherche
    switchToSearchMode();
    
    const items = Array.from(searchView.children);
    items.forEach(item => {
      const name = item.dataset.name;
      const category = item.dataset.category;
      const technology = item.dataset.technology || '';
      const features = item.dataset.features || '';
      
      const matchesSearch = query === '' || 
        name.includes(query) || 
        technology.includes(query) || 
        features.includes(query);
      const matchesCategory = !currentCategory || category === currentCategory;
      
      item.style.display = (matchesSearch && matchesCategory) ? '' : 'none';
    });

    // Tri
    const visibleItems = items.filter(item => item.style.display !== 'none');
    visibleItems.sort((a, b) => {
      if (currentSort === 'name') {
        return a.dataset.name.localeCompare(b.dataset.name);
      }
      if (currentSort === 'difficulty') {
        const order = { 'D√©butant': 1, 'Interm√©diaire': 2, 'Avanc√©': 3 };
        return order[a.dataset.difficulty] - order[b.dataset.difficulty];
      }
      if (currentSort === 'category') {
        return a.dataset.category.localeCompare(b.dataset.category);
      }
      return 0;
    });
    visibleItems.forEach(item => searchView.appendChild(item));
  }

  function filterCategories() {
    const sections = document.querySelectorAll('.category-section');
    sections.forEach(section => {
      const sectionCategory = section.dataset.category;
      section.style.display = (!currentCategory || sectionCategory === currentCategory) ? '' : 'none';
    });
  }

  searchInput.addEventListener('input', filterAndSortGames);
  
  sortSelect.addEventListener('change', (e) => {
    currentSort = e.target.value;
    filterAndSortGames();
  });
  
  filterBtns.forEach(btn => {
    btn.addEventListener('click', () => {
      filterBtns.forEach(b => {
        b.classList.remove('bg-blue-200', 'text-blue-900');
        b.classList.add('bg-gray-100', 'text-gray-700');
      });
      btn.classList.remove('bg-gray-100', 'text-gray-700');
      btn.classList.add('bg-blue-200', 'text-blue-900');
      
      currentCategory = btn.dataset.category;
      
      if (searchInput.value.trim() === '') {
        filterCategories();
      } else {
        filterAndSortGames();
      }
    });
  });

  // Initialisation
  filterAndSortGames();
});
</script>
